{
  "endpoints": {
    "/channels/in_app/inbox/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetInAppInboxTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetInAppInboxTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nrequest := channels.InboxToken{\n  ConnectionId: util.ToPointer(util.Nullable[string]{ Value: \"ConnectionId\" }),\n  Token: util.ToPointer(\"Token\"),\n}\n\nresponse, err := client.Channels.SaveInAppInboxToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/in_app/inbox/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetInAppInboxToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardInAppInboxToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/apns/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetMobilePushApnsTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetMobilePushApnsTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\napnsTokenPayloadInstallationId := channels.APNS_TOKEN_PAYLOAD_INSTALLATION_ID_DEVELOPMENT\n\nrequest := channels.ApnsTokenPayload{\n  AppId: util.ToPointer(\"AppId\"),\n  DeviceToken: util.ToPointer(\"DeviceToken\"),\n  InstallationId: &apnsTokenPayloadInstallationId,\n}\n\nresponse, err := client.Channels.SaveMobilePushApnsToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/apns/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetMobilePushApnsToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardMobilePushApnsToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/expo/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetMobilePushExpoTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetMobilePushExpoTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nrequest := channels.ExpoTokenPayload{\n  DeviceToken: util.ToPointer(\"DeviceToken\"),\n}\n\nresponse, err := client.Channels.SaveMobilePushExpoToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/expo/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetMobilePushExpoToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardMobilePushExpoToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/fcm/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetMobilePushFcmTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetMobilePushFcmTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nfcmTokenPayloadInstallationId := channels.FCM_TOKEN_PAYLOAD_INSTALLATION_ID_DEVELOPMENT\n\nrequest := channels.FcmTokenPayload{\n  DeviceToken: util.ToPointer(\"DeviceToken\"),\n  InstallationId: &fcmTokenPayloadInstallationId,\n}\n\nresponse, err := client.Channels.SaveMobilePushFcmToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/mobile_push/fcm/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetMobilePushFcmToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardMobilePushFcmToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/slack/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetSlackTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetSlackTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nslackTokenPayloadOauth := channels.SlackTokenPayloadOauth{\n  ChannelId: util.ToPointer(\"ChannelId\"),\n  InstallationId: util.ToPointer(\"InstallationId\"),\n  Scope: util.ToPointer(\"Scope\"),\n}\n\n\nslackTokenPayloadWebhook := channels.SlackTokenPayloadWebhook{\n  Url: util.ToPointer(\"Url\"),\n}\n\nrequest := channels.SlackTokenPayload{\n  Oauth: &slackTokenPayloadOauth,\n  Webhook: &slackTokenPayloadWebhook,\n}\n\nresponse, err := client.Channels.SaveSlackToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/slack/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetSlackToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardSlackToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/teams/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetTeamsTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetTeamsTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nteamsTokenPayloadWebhook := channels.TeamsTokenPayloadWebhook{\n  Url: util.ToPointer(\"Url\"),\n}\n\nrequest := channels.TeamsTokenPayload{\n  Webhook: &teamsTokenPayloadWebhook,\n}\n\nresponse, err := client.Channels.SaveTeamsToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/teams/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetTeamsToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardTeamsToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/web_push/tokens": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/channels\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := channels.GetWebPushTokensRequestParams{\n\n}\n\nresponse, err := client.Channels.GetWebPushTokens(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/shared\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nwebPushTokenPayloadKeys := shared.WebPushTokenPayloadKeys{\n  Auth: util.ToPointer(\"Auth\"),\n  P256dh: util.ToPointer(\"P256dh\"),\n}\n\nrequest := shared.WebPushTokenPayload{\n  Endpoint: util.ToPointer(\"Endpoint\"),\n  Keys: &webPushTokenPayloadKeys,\n}\n\nresponse, err := client.Channels.SaveWebPushToken(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/channels/web_push/tokens/{token_id}": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.GetWebPushToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n",
      "delete": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Channels.DiscardWebPushToken(context.Background(), \"tokenId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/inbox/installations": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/integrations\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nimages := integrations.Images{\n  EmptyInboxUrl: util.ToPointer(\"EmptyInboxUrl\"),\n}\n\n\nbanner := integrations.Banner{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  BackgroundOpacity: util.ToPointer(float64(123)),\n  FontSize: util.ToPointer(\"FontSize\"),\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\ndialog := integrations.Dialog{\n  AccentColor: util.ToPointer(\"AccentColor\"),\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\nfooter := integrations.Footer{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  BorderRadius: util.ToPointer(\"BorderRadius\"),\n  FontSize: util.ToPointer(\"FontSize\"),\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\nheader := integrations.Header{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  BorderRadius: util.ToPointer(\"BorderRadius\"),\n  FontFamily: util.ToPointer(\"FontFamily\"),\n  FontSize: util.ToPointer(\"FontSize\"),\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\nicon := integrations.Icon{\n  BorderColor: util.ToPointer(\"BorderColor\"),\n  Width: util.ToPointer(\"Width\"),\n}\n\n\ndefaultHover := integrations.DefaultHover{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n}\n\n\ndefaultState := integrations.DefaultState{\n  Color: util.ToPointer(\"Color\"),\n}\n\ndefault_ := integrations.Default_{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  BorderRadius: util.ToPointer(\"BorderRadius\"),\n  FontFamily: util.ToPointer(\"FontFamily\"),\n  FontSize: util.ToPointer(\"FontSize\"),\n  Hover: &defaultHover,\n  Margin: util.ToPointer(\"Margin\"),\n  State: &defaultState,\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\nunreadHover := integrations.UnreadHover{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n}\n\n\nunreadState := integrations.UnreadState{\n  Color: util.ToPointer(\"Color\"),\n}\n\nunread := integrations.Unread{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  Hover: &unreadHover,\n  State: &unreadState,\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\n\nunseenHover := integrations.UnseenHover{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n}\n\n\nunseenState := integrations.UnseenState{\n  Color: util.ToPointer(\"Color\"),\n}\n\nunseen := integrations.Unseen{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n  Hover: &unseenHover,\n  State: &unseenState,\n  TextColor: util.ToPointer(\"TextColor\"),\n}\n\nthemeNotification := integrations.ThemeNotification{\n  Default_: &default_,\n  Unread: &unread,\n  Unseen: &unseen,\n}\n\n\nunseenBadge := integrations.UnseenBadge{\n  BackgroundColor: util.ToPointer(\"BackgroundColor\"),\n}\n\ntheme := integrations.Theme{\n  Banner: &banner,\n  Dialog: &dialog,\n  Footer: &footer,\n  Header: &header,\n  Icon: &icon,\n  Notification: &themeNotification,\n  UnseenBadge: &unseenBadge,\n}\n\nrequest := integrations.InboxConfigPayload{\n  Images: &images,\n  Locale: util.ToPointer(util.Nullable[string]{ Value: \"Locale\" }),\n  Theme: &theme,\n}\n\nresponse, err := client.Integrations.SaveInboxInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/inbox/installations/start": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Integrations.StartInboxInstallation(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/slack/installations": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/integrations\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nauthedUser := integrations.AuthedUser{\n  AccessToken: util.ToPointer(\"AccessToken\"),\n  ExpiresIn: util.ToPointer(int64(123)),\n  Id: util.ToPointer(\"Id\"),\n  RefreshToken: util.ToPointer(\"RefreshToken\"),\n  Scope: util.ToPointer(\"Scope\"),\n  TokenType: util.ToPointer(\"TokenType\"),\n}\n\n\nenterprise := integrations.Enterprise{\n  Id: util.ToPointer(\"Id\"),\n  Name: util.ToPointer(\"Name\"),\n}\n\n\nincomingWebhook := integrations.IncomingWebhook{\n  Channel: util.ToPointer(\"Channel\"),\n  ConfigurationUrl: util.ToPointer(\"ConfigurationUrl\"),\n  Url: util.ToPointer(\"Url\"),\n}\n\n\nteam := integrations.Team{\n  Id: util.ToPointer(\"Id\"),\n  Name: util.ToPointer(\"Name\"),\n}\n\nrequest := integrations.SlackInstallation{\n  AccessToken: util.ToPointer(\"AccessToken\"),\n  AppId: util.ToPointer(\"AppId\"),\n  AuthedUser: &authedUser,\n  BotUserId: util.ToPointer(\"BotUserId\"),\n  Enterprise: &enterprise,\n  ExpiresIn: util.ToPointer(int64(123)),\n  Id: util.ToPointer(\"Id\"),\n  IncomingWebhook: &incomingWebhook,\n  IsEnterpriseInstall: util.ToPointer(true),\n  RefreshToken: util.ToPointer(\"RefreshToken\"),\n  Scope: util.ToPointer(\"Scope\"),\n  Team: &team,\n  TokenType: util.ToPointer(\"TokenType\"),\n}\n\nresponse, err := client.Integrations.SaveSlackInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/slack/installations/finish": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/integrations\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nrequest := integrations.SlackFinishInstallResponse{\n  AppId: util.ToPointer(\"AppId\"),\n  Code: util.ToPointer(\"Code\"),\n  RedirectUrl: util.ToPointer(\"RedirectUrl\"),\n}\n\nresponse, err := client.Integrations.FinishSlackInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/slack/installations/start": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/integrations\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nrequest := integrations.SlackStartInstall{\n  AppId: util.ToPointer(\"AppId\"),\n  AuthUrl: util.ToPointer(\"AuthUrl\"),\n  ExtraScopes: []string{},\n  RedirectUrl: util.ToPointer(\"RedirectUrl\"),\n}\n\nresponse, err := client.Integrations.StartSlackInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/templates/installations": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/integrations\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nrequest := integrations.TemplatesInstallation{\n  Category: util.ToPointer(util.Nullable[string]{ Value: \"Category\" }),\n  Channel: util.ToPointer(\"Channel\"),\n  Text: util.ToPointer(\"Text\"),\n}\n\nresponse, err := client.Integrations.SaveTemplatesInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/web_push/installations": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/util\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/shared\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nwebPushTokenPayloadKeys := shared.WebPushTokenPayloadKeys{\n  Auth: util.ToPointer(\"Auth\"),\n  P256dh: util.ToPointer(\"P256dh\"),\n}\n\nrequest := shared.WebPushTokenPayload{\n  Endpoint: util.ToPointer(\"Endpoint\"),\n  Keys: &webPushTokenPayloadKeys,\n}\n\nresponse, err := client.Integrations.SaveWebPushInstallation(context.Background(), request)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/integrations/web_push/installations/start": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Integrations.StartWebPushInstallation(context.Background())\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/notifications": {
      "get": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n  \"github.com/magicbell/magicbell-go/pkg/user-client/notifications\"\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\n\nparams := notifications.ListNotificationsRequestParams{\n\n}\n\nresponse, err := client.Notifications.ListNotifications(context.Background(), params)\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/notifications/{notification_id}/archive": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Notifications.ArchiveNotification(context.Background(), \"notificationId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/notifications/{notification_id}/read": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Notifications.MarkNotificationRead(context.Background(), \"notificationId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/notifications/{notification_id}/unarchive": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Notifications.UnarchiveNotification(context.Background(), \"notificationId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    },
    "/notifications/{notification_id}/unread": {
      "post": "import (\n  \"fmt\"\n  \"encoding/json\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n\n)\n\nconfig := clientconfig.NewConfig()\nclient := client.NewClient(config)\n\nresponse, err := client.Notifications.MarkNotificationUnread(context.Background(), \"notificationId\")\nif err != nil {\n  panic(err)\n}\n\nfmt.Println(response)\n"
    }
  },
  "authentication": {
    "bearer": {
      "constructor": "import (\n    \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n    \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  )\n\nconfig := clientconfig.NewConfig()\nconfig.SetAccessToken(\"YOUR-TOKEN\")\n\nsdk := client.NewClient(config)",
      "setter": "import (\n    \"github.com/magicbell/magicbell-go/pkg/user-client/client\"\n    \"github.com/magicbell/magicbell-go/pkg/user-client/clientconfig\"\n  )\n\nconfig := clientconfig.NewConfig()\n\nsdk := client.NewClient(config)\nsdk.SetAccessToken(\"YOUR-TOKEN\")"
    }
  }
}
